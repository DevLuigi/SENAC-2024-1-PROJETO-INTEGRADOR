package view;

import java.awt.Color;
import controller.*;
import dao.AnaliticoDao;
import dao.ClienteDao;
import dao.ProdutoDao;
import dao.SinteticoDao;
import dao.VendaDao;
import dao.VendaItemDao;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import javax.swing.ButtonModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.*;
import model.Produto;
import java.util.ArrayList;
import model.Cliente;
import model.ItemVenda;
import model.RelatorioAnalitico;
import model.RelatorioSintetico;
import model.Venda;

public class TelaGerencial extends javax.swing.JFrame {
    /**
     * Creates new form TelaInicial
     */
   
    public TelaGerencial() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupSexo = new javax.swing.ButtonGroup();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        TabbedPanePrincipal = new javax.swing.JTabbedPane();
        PainelLateralProdutos = new javax.swing.JPanel();
        TabbedPaneProdutos = new javax.swing.JTabbedPane();
        PainelConsultaProdutos = new javax.swing.JPanel();
        lblNomeProduto = new javax.swing.JLabel();
        txtNomeProdutoConsultar = new javax.swing.JTextField();
        btnConsultarProduto = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProduto = new javax.swing.JTable();
        btnIncluirProduto = new javax.swing.JButton();
        btnAlterarProduto = new javax.swing.JButton();
        btnExcluirProduto = new javax.swing.JButton();
        PainelDigitarProdutos = new javax.swing.JPanel();
        lblNomePD = new javax.swing.JLabel();
        txtNomeProdutoDigitar = new javax.swing.JTextField();
        lblModeloPD = new javax.swing.JLabel();
        txtModeloProdutoDigitar = new javax.swing.JTextField();
        lblCategoriaPD = new javax.swing.JLabel();
        txtCategoriaProdutoDigitar = new javax.swing.JTextField();
        lblFabricantePD = new javax.swing.JLabel();
        txtFabricanteProduto = new javax.swing.JTextField();
        lblCorPD = new javax.swing.JLabel();
        lblPrecoPD = new javax.swing.JLabel();
        lblEstoquePD = new javax.swing.JLabel();
        txtEstoqueProduto = new javax.swing.JTextField();
        btnOkProduto = new javax.swing.JButton();
        btnCancelarProduto = new javax.swing.JButton();
        lblStatusProduto = new javax.swing.JLabel();
        cboCor = new javax.swing.JComboBox<>();
        lblAcaoDigitarProduto = new javax.swing.JLabel();
        txtPrecoProduto = new javax.swing.JFormattedTextField();
        lblIDPRODUTO = new javax.swing.JLabel();
        txtIDProduto = new javax.swing.JTextField();
        lblProdutos = new javax.swing.JLabel();
        PainelLateralCliente = new javax.swing.JPanel();
        TabbedPaneClientes = new javax.swing.JTabbedPane();
        PainelConsultaClientes = new javax.swing.JPanel();
        lblNomeCliente = new javax.swing.JLabel();
        lblCPFCliente = new javax.swing.JLabel();
        txtNomeClienteConsultar = new javax.swing.JTextField();
        btnConsultarCliente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCliente = new javax.swing.JTable();
        btnIncluirCliente = new javax.swing.JButton();
        btnAlterarCliente = new javax.swing.JButton();
        btnExcluirCliente = new javax.swing.JButton();
        fTxtCpfConsultar = new javax.swing.JFormattedTextField();
        PainelDigitarClientes = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        lblCPF = new javax.swing.JLabel();
        lblTel = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblSexo = new javax.swing.JLabel();
        lblEstadoCiv = new javax.swing.JLabel();
        lblDataNasc = new javax.swing.JLabel();
        txtNomeClienteDigitar = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        rbtnFemininoCliente = new javax.swing.JRadioButton();
        rbtnMasculinoCliente = new javax.swing.JRadioButton();
        cboEstadoCivil = new javax.swing.JComboBox<>();
        lblCep = new javax.swing.JLabel();
        lblLogradouro = new javax.swing.JLabel();
        lblBairro = new javax.swing.JLabel();
        lblCidade = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        lblPais = new javax.swing.JLabel();
        txtLogradouro = new javax.swing.JTextField();
        txtBairro = new javax.swing.JTextField();
        txtCidade = new javax.swing.JTextField();
        btnOK = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblStatusCliente = new javax.swing.JLabel();
        fTxtCpfDigitar = new javax.swing.JFormattedTextField();
        fTxtTelefone = new javax.swing.JFormattedTextField();
        fTxtCepDigitar = new javax.swing.JFormattedTextField();
        cboPais = new javax.swing.JComboBox<>();
        cboEstado = new javax.swing.JComboBox<>();
        lblNumeroDigitar = new javax.swing.JLabel();
        fTxtNumeroDigitar = new javax.swing.JFormattedTextField();
        lblComplemento = new javax.swing.JLabel();
        txtComplemento = new javax.swing.JTextField();
        lblAcaoDigitarCliente = new javax.swing.JLabel();
        txtDataNascimento = new com.toedter.calendar.JDateChooser();
        lblClientes = new javax.swing.JLabel();
        PainelLateralVendas = new javax.swing.JPanel();
        TabbedPaneVendas = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblVenda = new javax.swing.JTable();
        btnVendaConsultar = new javax.swing.JButton();
        btnVendaIncluir = new javax.swing.JButton();
        btnVendaAlterar = new javax.swing.JButton();
        btnVendaExcluir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtVendaQtdPedido = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtVendaPrecoProduto = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblItensVenda = new javax.swing.JTable();
        btnVendaItemAlterar = new javax.swing.JButton();
        btnVendaItemExcluir = new javax.swing.JButton();
        btnVendaItemAdicionar = new javax.swing.JButton();
        txtVendaNomeProduto = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtVendaValorTotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtVendaQtdEstoque = new javax.swing.JTextField();
        txtVendaIDProduto = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtVendaClienteNome = new javax.swing.JTextField();
        txtDataVenda = new com.toedter.calendar.JDateChooser();
        fTxtVendaCpf = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        txtVendaID = new javax.swing.JTextField();
        btnVendaOK = new javax.swing.JButton();
        btnVendaCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        PainelLateralRelatorios = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        txtDataVendas = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtDataAte = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblSintetico = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        txtValorTotal = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtRegistros = new javax.swing.JTextField();
        btnConsultar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        btnConsultarAnalitico = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblAnalitico = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        txtValorAnalitico = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtRegistrosAnalitico = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        PainelHeader = new javax.swing.JPanel();
        btnSair = new javax.swing.JToggleButton();
        lblHeader = new javax.swing.JLabel();
        imgLogo = new javax.swing.JLabel();
        PainelFooter = new javax.swing.JPanel();
        lblFooter = new javax.swing.JLabel();

        jButton4.setText("jButton4");

        jLabel5.setText("jLabel5");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tela Gerencial");
        setResizable(false);

        TabbedPanePrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        TabbedPanePrincipal.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        PainelLateralProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PainelLateralProdutosMouseClicked(evt);
            }
        });

        lblNomeProduto.setForeground(new java.awt.Color(51, 51, 51));
        lblNomeProduto.setText("Nome:");

        btnConsultarProduto.setText("Consultar");
        btnConsultarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarProdutoActionPerformed(evt);
            }
        });

        tblProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Modelo", "Categoria", "Preço", "Estoque", "Fabricante", "Cor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblProduto);

        btnIncluirProduto.setText("Incluir");
        btnIncluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirProdutoActionPerformed(evt);
            }
        });

        btnAlterarProduto.setText("Alterar");
        btnAlterarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarProdutoActionPerformed(evt);
            }
        });

        btnExcluirProduto.setText("Excluir");
        btnExcluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelConsultaProdutosLayout = new javax.swing.GroupLayout(PainelConsultaProdutos);
        PainelConsultaProdutos.setLayout(PainelConsultaProdutosLayout);
        PainelConsultaProdutosLayout.setHorizontalGroup(
            PainelConsultaProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelConsultaProdutosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelConsultaProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelConsultaProdutosLayout.createSequentialGroup()
                        .addComponent(lblNomeProduto)
                        .addGap(27, 27, 27)
                        .addComponent(txtNomeProdutoConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConsultarProduto)
                        .addContainerGap())
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                    .addGroup(PainelConsultaProdutosLayout.createSequentialGroup()
                        .addComponent(btnIncluirProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAlterarProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExcluirProduto)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        PainelConsultaProdutosLayout.setVerticalGroup(
            PainelConsultaProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelConsultaProdutosLayout.createSequentialGroup()
                .addGroup(PainelConsultaProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelConsultaProdutosLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnConsultarProduto))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelConsultaProdutosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PainelConsultaProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNomeProduto)
                            .addComponent(txtNomeProdutoConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelConsultaProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIncluirProduto)
                    .addComponent(btnAlterarProduto)
                    .addComponent(btnExcluirProduto))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TabbedPaneProdutos.addTab("Consulta", PainelConsultaProdutos);

        lblNomePD.setForeground(new java.awt.Color(51, 51, 51));
        lblNomePD.setText("Nome:");

        txtNomeProdutoDigitar.setBackground(new java.awt.Color(255, 221, 40));
        txtNomeProdutoDigitar.setToolTipText("Campo obrigatório");
        txtNomeProdutoDigitar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNomeProdutoDigitarFocusLost(evt);
            }
        });

        lblModeloPD.setForeground(new java.awt.Color(51, 51, 51));
        lblModeloPD.setText("Modelo:");

        lblCategoriaPD.setForeground(new java.awt.Color(51, 51, 51));
        lblCategoriaPD.setText("Categoria:");

        txtCategoriaProdutoDigitar.setBackground(new java.awt.Color(255, 221, 40));
        txtCategoriaProdutoDigitar.setToolTipText("Campo obrigatório");
        txtCategoriaProdutoDigitar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCategoriaProdutoDigitarFocusLost(evt);
            }
        });

        lblFabricantePD.setForeground(new java.awt.Color(51, 51, 51));
        lblFabricantePD.setText("Fabricante:");

        lblCorPD.setForeground(new java.awt.Color(51, 51, 51));
        lblCorPD.setText("Cor:");

        lblPrecoPD.setForeground(new java.awt.Color(51, 51, 51));
        lblPrecoPD.setText("Preço:");

        lblEstoquePD.setForeground(new java.awt.Color(51, 51, 51));
        lblEstoquePD.setText("Estoque:");

        txtEstoqueProduto.setBackground(new java.awt.Color(255, 221, 40));
        txtEstoqueProduto.setToolTipText("Campo obrigatório");
        txtEstoqueProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEstoqueProdutoFocusLost(evt);
            }
        });
        txtEstoqueProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEstoqueProdutoKeyTyped(evt);
            }
        });

        btnOkProduto.setText("OK");
        btnOkProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkProdutoActionPerformed(evt);
            }
        });

        btnCancelarProduto.setText("Cancelar");
        btnCancelarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarProdutoActionPerformed(evt);
            }
        });

        lblStatusProduto.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblStatusProduto.setForeground(new java.awt.Color(51, 255, 0));
        lblStatusProduto.setText("STATUS: VÁLIDO");

        cboCor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sem cor", "Amarelo", "Azul", "Branco", "Preto", "Vermelho" }));

        lblAcaoDigitarProduto.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblAcaoDigitarProduto.setForeground(new java.awt.Color(51, 51, 51));
        lblAcaoDigitarProduto.setText("Inserir");

        txtPrecoProduto.setBackground(new java.awt.Color(255, 221, 40));
        txtPrecoProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        lblIDPRODUTO.setText("ID:");

        txtIDProduto.setEnabled(false);

        javax.swing.GroupLayout PainelDigitarProdutosLayout = new javax.swing.GroupLayout(PainelDigitarProdutos);
        PainelDigitarProdutos.setLayout(PainelDigitarProdutosLayout);
        PainelDigitarProdutosLayout.setHorizontalGroup(
            PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelDigitarProdutosLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PainelDigitarProdutosLayout.createSequentialGroup()
                        .addComponent(lblStatusProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOkProduto)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelarProduto))
                    .addGroup(PainelDigitarProdutosLayout.createSequentialGroup()
                        .addGroup(PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelDigitarProdutosLayout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(txtIDProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                .addGap(223, 223, 223))
                            .addGroup(PainelDigitarProdutosLayout.createSequentialGroup()
                                .addGroup(PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PainelDigitarProdutosLayout.createSequentialGroup()
                                        .addGroup(PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblModeloPD)
                                            .addComponent(lblNomePD))
                                        .addGap(27, 27, 27)
                                        .addGroup(PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtNomeProdutoDigitar, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtModeloProdutoDigitar, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lblAcaoDigitarProduto)
                                    .addComponent(lblIDPRODUTO)
                                    .addGroup(PainelDigitarProdutosLayout.createSequentialGroup()
                                        .addGroup(PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCategoriaPD)
                                            .addComponent(lblFabricantePD)
                                            .addComponent(lblCorPD)
                                            .addComponent(lblPrecoPD))
                                        .addGap(14, 14, 14)
                                        .addGroup(PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtPrecoProduto, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(cboCor, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtFabricanteProduto, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtCategoriaProdutoDigitar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(lblEstoquePD)))
                .addGap(18, 18, 18)
                .addComponent(txtEstoqueProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        PainelDigitarProdutosLayout.setVerticalGroup(
            PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelDigitarProdutosLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblAcaoDigitarProduto)
                .addGap(18, 18, 18)
                .addGroup(PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIDPRODUTO)
                    .addComponent(txtEstoqueProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstoquePD)
                    .addComponent(txtIDProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomePD)
                    .addComponent(txtNomeProdutoDigitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModeloPD)
                    .addComponent(txtModeloProdutoDigitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategoriaPD)
                    .addComponent(txtCategoriaProdutoDigitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFabricantePD)
                    .addComponent(txtFabricanteProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCorPD)
                    .addComponent(cboCor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecoPD)
                    .addComponent(txtPrecoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addGroup(PainelDigitarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatusProduto)
                    .addComponent(btnOkProduto)
                    .addComponent(btnCancelarProduto))
                .addGap(24, 24, 24))
        );

        TabbedPaneProdutos.addTab("Digitar", PainelDigitarProdutos);

        lblProdutos.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblProdutos.setForeground(new java.awt.Color(51, 51, 51));
        lblProdutos.setText("Produtos");

        javax.swing.GroupLayout PainelLateralProdutosLayout = new javax.swing.GroupLayout(PainelLateralProdutos);
        PainelLateralProdutos.setLayout(PainelLateralProdutosLayout);
        PainelLateralProdutosLayout.setHorizontalGroup(
            PainelLateralProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLateralProdutosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelLateralProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelLateralProdutosLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblProdutos)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PainelLateralProdutosLayout.createSequentialGroup()
                        .addComponent(TabbedPaneProdutos)
                        .addContainerGap())))
        );
        PainelLateralProdutosLayout.setVerticalGroup(
            PainelLateralProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelLateralProdutosLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(lblProdutos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TabbedPaneProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        TabbedPanePrincipal.addTab("Produtos", PainelLateralProdutos);

        lblNomeCliente.setForeground(new java.awt.Color(51, 51, 51));
        lblNomeCliente.setText("Nome:");

        lblCPFCliente.setForeground(new java.awt.Color(51, 51, 51));
        lblCPFCliente.setText("CPF:");

        btnConsultarCliente.setText("Consultar");
        btnConsultarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarClienteActionPerformed(evt);
            }
        });

        tblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CPF", "Nome", "Telefone", "E-mail", "Sexo", "Estado civil", "Dt. Nascimento", "CEP", "Logradouro", "Numero", "Complemento", "Bairro", "Cidade", "Estado", "Pais"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCliente);

        btnIncluirCliente.setText("Incluir");
        btnIncluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirClienteActionPerformed(evt);
            }
        });

        btnAlterarCliente.setText("Alterar");
        btnAlterarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarClienteActionPerformed(evt);
            }
        });

        btnExcluirCliente.setText("Excluir");
        btnExcluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirClienteActionPerformed(evt);
            }
        });

        try {
            fTxtCpfConsultar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fTxtCpfConsultar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fTxtCpfConsultarFocusLost(evt);
            }
        });
        fTxtCpfConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fTxtCpfConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelConsultaClientesLayout = new javax.swing.GroupLayout(PainelConsultaClientes);
        PainelConsultaClientes.setLayout(PainelConsultaClientesLayout);
        PainelConsultaClientesLayout.setHorizontalGroup(
            PainelConsultaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelConsultaClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelConsultaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
                    .addGroup(PainelConsultaClientesLayout.createSequentialGroup()
                        .addComponent(btnIncluirCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAlterarCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExcluirCliente)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(PainelConsultaClientesLayout.createSequentialGroup()
                        .addComponent(lblNomeCliente)
                        .addGap(18, 18, 18)
                        .addComponent(txtNomeClienteConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblCPFCliente)
                        .addGap(18, 18, 18)
                        .addComponent(fTxtCpfConsultar)
                        .addGap(49, 49, 49)
                        .addComponent(btnConsultarCliente)))
                .addContainerGap())
        );
        PainelConsultaClientesLayout.setVerticalGroup(
            PainelConsultaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelConsultaClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelConsultaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeCliente)
                    .addComponent(txtNomeClienteConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCPFCliente)
                    .addComponent(btnConsultarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fTxtCpfConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PainelConsultaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIncluirCliente)
                    .addComponent(btnAlterarCliente)
                    .addComponent(btnExcluirCliente))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        TabbedPaneClientes.addTab("Consulta", PainelConsultaClientes);

        lblNome.setForeground(new java.awt.Color(51, 51, 51));
        lblNome.setText("Nome:");

        lblCPF.setForeground(new java.awt.Color(51, 51, 51));
        lblCPF.setText("CPF:");

        lblTel.setForeground(new java.awt.Color(51, 51, 51));
        lblTel.setText("Telefone:");

        lblEmail.setForeground(new java.awt.Color(51, 51, 51));
        lblEmail.setText("E-mail:");

        lblSexo.setForeground(new java.awt.Color(51, 51, 51));
        lblSexo.setText("Sexo:");

        lblEstadoCiv.setForeground(new java.awt.Color(51, 51, 51));
        lblEstadoCiv.setText("Estado civil:");

        lblDataNasc.setForeground(new java.awt.Color(51, 51, 51));
        lblDataNasc.setText("Data de nasc:");

        txtNomeClienteDigitar.setBackground(new java.awt.Color(255, 221, 40));
        txtNomeClienteDigitar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNomeClienteDigitarFocusLost(evt);
            }
        });

        txtEmail.setBackground(new java.awt.Color(255, 221, 40));
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        buttonGroupSexo.add(rbtnFemininoCliente);
        rbtnFemininoCliente.setForeground(new java.awt.Color(51, 51, 51));
        rbtnFemininoCliente.setText("Feminino");

        buttonGroupSexo.add(rbtnMasculinoCliente);
        rbtnMasculinoCliente.setForeground(new java.awt.Color(51, 51, 51));
        rbtnMasculinoCliente.setText("Masculino");
        rbtnMasculinoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnMasculinoClienteActionPerformed(evt);
            }
        });

        cboEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Solteiro(a)", "Casado(a)", "Divorciado(a)", "Viúvo(a)" }));

        lblCep.setForeground(new java.awt.Color(51, 51, 51));
        lblCep.setText("CEP:");

        lblLogradouro.setForeground(new java.awt.Color(51, 51, 51));
        lblLogradouro.setText("Logradouro:");

        lblBairro.setForeground(new java.awt.Color(51, 51, 51));
        lblBairro.setText("Bairro:");

        lblCidade.setForeground(new java.awt.Color(51, 51, 51));
        lblCidade.setText("Cidade:");

        lblEstado.setForeground(new java.awt.Color(51, 51, 51));
        lblEstado.setText("Estado:");

        lblPais.setForeground(new java.awt.Color(51, 51, 51));
        lblPais.setText("País:");

        txtLogradouro.setBackground(new java.awt.Color(255, 221, 40));
        txtLogradouro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLogradouroFocusLost(evt);
            }
        });

        txtBairro.setBackground(new java.awt.Color(255, 221, 40));
        txtBairro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBairroFocusLost(evt);
            }
        });
        txtBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBairroActionPerformed(evt);
            }
        });

        txtCidade.setBackground(new java.awt.Color(255, 221, 40));
        txtCidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCidadeFocusLost(evt);
            }
        });

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblStatusCliente.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblStatusCliente.setForeground(new java.awt.Color(51, 255, 0));
        lblStatusCliente.setText("STATUS: VÁLIDO");

        fTxtCpfDigitar.setBackground(new java.awt.Color(255, 221, 40));
        try {
            fTxtCpfDigitar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fTxtCpfDigitar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fTxtCpfDigitarFocusLost(evt);
            }
        });
        fTxtCpfDigitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fTxtCpfDigitarActionPerformed(evt);
            }
        });

        try {
            fTxtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fTxtTelefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fTxtTelefoneFocusLost(evt);
            }
        });
        fTxtTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fTxtTelefoneActionPerformed(evt);
            }
        });

        fTxtCepDigitar.setBackground(new java.awt.Color(255, 221, 40));
        try {
            fTxtCepDigitar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fTxtCepDigitar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fTxtCepDigitarFocusLost(evt);
            }
        });

        cboPais.setBackground(new java.awt.Color(255, 221, 40));
        cboPais.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Brasil" }));

        cboEstado.setBackground(new java.awt.Color(255, 221, 40));
        cboEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Acre", "Alagoas", "Amapá", "Amazonas", "Bahia", "Ceará", "Distrito Federal", "Espírito Santo", "Goiás", "Maranhão", "Mato Grosso", "Mato Grosso do Sul", "Minas Gerais", "Pará", "Paraíba", "Paraná", "Pernambuco", "Piauí", "Rio de Janeiro", "Rio Grande do Norte", "Rio Grande do Sul", "Rondônia", "Roraima", "Santa Catarina", "São Paulo", "Sergipe", "Tocantins" }));

        lblNumeroDigitar.setForeground(new java.awt.Color(51, 51, 51));
        lblNumeroDigitar.setText("Número:");

        fTxtNumeroDigitar.setBackground(new java.awt.Color(255, 221, 40));
        fTxtNumeroDigitar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        fTxtNumeroDigitar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fTxtNumeroDigitarFocusLost(evt);
            }
        });
        fTxtNumeroDigitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fTxtNumeroDigitarActionPerformed(evt);
            }
        });

        lblComplemento.setForeground(new java.awt.Color(51, 51, 51));
        lblComplemento.setText("Complemento:");

        txtComplemento.setBackground(new java.awt.Color(255, 221, 40));

        lblAcaoDigitarCliente.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblAcaoDigitarCliente.setForeground(new java.awt.Color(51, 51, 51));
        lblAcaoDigitarCliente.setText("Inserir");

        txtDataNascimento.setDateFormatString("dd/MM/yyyy");

        javax.swing.GroupLayout PainelDigitarClientesLayout = new javax.swing.GroupLayout(PainelDigitarClientes);
        PainelDigitarClientes.setLayout(PainelDigitarClientesLayout);
        PainelDigitarClientesLayout.setHorizontalGroup(
            PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                                .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                                        .addComponent(lblDataNasc)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                                        .addComponent(lblEstadoCiv)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cboEstadoCivil, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                                        .addGap(74, 74, 74)
                                        .addComponent(rbtnFemininoCliente)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                                        .addComponent(rbtnMasculinoCliente)
                                        .addGap(26, 26, 26))
                                    .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblNome)
                                            .addComponent(lblCPF)
                                            .addComponent(lblTel)
                                            .addComponent(lblEmail)
                                            .addComponent(lblSexo))
                                        .addGap(26, 26, 26)
                                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtEmail)
                                            .addComponent(txtNomeClienteDigitar)
                                            .addComponent(fTxtCpfDigitar)
                                            .addComponent(fTxtTelefone))))
                                .addGap(40, 40, 40))
                            .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                                .addComponent(lblStatusCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnOK)
                                .addGap(12, 12, 12)))
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelDigitarClientesLayout.createSequentialGroup()
                                .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblEstado)
                                        .addComponent(lblPais))
                                    .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                                        .addComponent(btnCancelar)
                                        .addGap(14, 14, 14)))
                                .addGap(48, 48, 48)
                                .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboPais, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCep)
                                            .addComponent(lblLogradouro)
                                            .addComponent(lblNumeroDigitar))
                                        .addGap(21, 21, 21)
                                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(fTxtNumeroDigitar, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(fTxtCepDigitar)
                                            .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                                                .addComponent(txtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelDigitarClientesLayout.createSequentialGroup()
                                        .addComponent(lblComplemento)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtComplemento))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelDigitarClientesLayout.createSequentialGroup()
                                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblBairro)
                                            .addComponent(lblCidade))
                                        .addGap(46, 46, 46)
                                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtBairro)
                                            .addComponent(txtCidade))))))
                        .addGap(21, 21, 21))
                    .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                        .addComponent(lblAcaoDigitarCliente)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        PainelDigitarClientesLayout.setVerticalGroup(
            PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblAcaoDigitarCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCep)
                            .addComponent(fTxtCepDigitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLogradouro)
                            .addComponent(txtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNumeroDigitar)
                            .addComponent(fTxtNumeroDigitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblComplemento))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBairro))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCidade))
                        .addGap(9, 9, 9)
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEstado))
                        .addGap(14, 14, 14))
                    .addGroup(PainelDigitarClientesLayout.createSequentialGroup()
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNome)
                            .addComponent(txtNomeClienteDigitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCPF)
                            .addComponent(fTxtCpfDigitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTel)
                            .addComponent(fTxtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbtnFemininoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbtnMasculinoCliente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEstadoCiv))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDataNasc)
                            .addComponent(txtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPais))
                .addGap(18, 18, 18)
                .addGroup(PainelDigitarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnOK)
                    .addComponent(lblStatusCliente))
                .addGap(66, 66, 66))
        );

        TabbedPaneClientes.addTab("Digitar", PainelDigitarClientes);

        lblClientes.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblClientes.setForeground(new java.awt.Color(51, 51, 51));
        lblClientes.setText("Clientes");

        javax.swing.GroupLayout PainelLateralClienteLayout = new javax.swing.GroupLayout(PainelLateralCliente);
        PainelLateralCliente.setLayout(PainelLateralClienteLayout);
        PainelLateralClienteLayout.setHorizontalGroup(
            PainelLateralClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLateralClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelLateralClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TabbedPaneClientes)
                    .addGroup(PainelLateralClienteLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lblClientes)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PainelLateralClienteLayout.setVerticalGroup(
            PainelLateralClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelLateralClienteLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(lblClientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TabbedPaneClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        TabbedPanePrincipal.addTab("Clientes", PainelLateralCliente);

        tblVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Data", "ID Cliente", "Nome Cliente", "Valor total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblVenda);

        btnVendaConsultar.setText("Consultar");
        btnVendaConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendaConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnVendaConsultar)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(btnVendaConsultar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnVendaIncluir.setText("Incluir");
        btnVendaIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendaIncluirActionPerformed(evt);
            }
        });

        btnVendaAlterar.setText("Alterar");
        btnVendaAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendaAlterarActionPerformed(evt);
            }
        });

        btnVendaExcluir.setText("Excluir");
        btnVendaExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendaExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVendaIncluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVendaAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVendaExcluir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVendaIncluir)
                    .addComponent(btnVendaAlterar)
                    .addComponent(btnVendaExcluir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TabbedPaneVendas.addTab("Consulta", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(" Etapa 1° "));

        jLabel4.setText("Produto");

        jLabel6.setText("Qtd. Pedido");

        txtVendaQtdPedido.setBackground(new java.awt.Color(255, 221, 40));

        jLabel12.setText("Preço");

        txtVendaPrecoProduto.setEnabled(false);

        tblItensVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Preço", "Quantidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblItensVenda);

        btnVendaItemAlterar.setText("Alterar");
        btnVendaItemAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendaItemAlterarActionPerformed(evt);
            }
        });

        btnVendaItemExcluir.setText("Excluir");
        btnVendaItemExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendaItemExcluirActionPerformed(evt);
            }
        });

        btnVendaItemAdicionar.setText("Adicionar");
        btnVendaItemAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendaItemAdicionarActionPerformed(evt);
            }
        });

        txtVendaNomeProduto.setEditable(false);
        txtVendaNomeProduto.setEnabled(false);
        txtVendaNomeProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtVendaNomeProdutoFocusLost(evt);
            }
        });

        jLabel15.setText("Valor total");

        txtVendaValorTotal.setEnabled(false);

        jLabel8.setText("Qtd. Estoque");

        txtVendaQtdEstoque.setEnabled(false);

        txtVendaIDProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtVendaIDProdutoFocusLost(evt);
            }
        });
        txtVendaIDProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVendaIDProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtVendaIDProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtVendaNomeProduto))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(txtVendaPrecoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtVendaQtdEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtVendaQtdPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnVendaItemAdicionar))))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(btnVendaItemAlterar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnVendaItemExcluir)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15)
                            .addGap(18, 18, 18)
                            .addComponent(txtVendaValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(72, 72, 72))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVendaNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtVendaQtdPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtVendaIDProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVendaPrecoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel8)
                    .addComponent(txtVendaQtdEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVendaItemAdicionar))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(148, 148, 148))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel15)
                                .addComponent(txtVendaValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnVendaItemAlterar)
                                .addComponent(btnVendaItemExcluir)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(" Etapa 2° "));

        jLabel13.setText("Cliente");

        jLabel14.setText("Data");

        txtVendaClienteNome.setEditable(false);
        txtVendaClienteNome.setEnabled(false);

        txtDataVenda.setBackground(new java.awt.Color(255, 221, 40));
        txtDataVenda.setDateFormatString("dd/MM/yyyy");

        fTxtVendaCpf.setBackground(new java.awt.Color(255, 221, 40));
        try {
            fTxtVendaCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fTxtVendaCpf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fTxtVendaCpfFocusLost(evt);
            }
        });
        fTxtVendaCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fTxtVendaCpfActionPerformed(evt);
            }
        });

        jLabel2.setText("ID");

        txtVendaID.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtVendaID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fTxtVendaCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtVendaClienteNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDataVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDataVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(fTxtVendaCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtVendaClienteNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(jLabel2)
                        .addComponent(txtVendaID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        btnVendaOK.setText("Inserir");
        btnVendaOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendaOKActionPerformed(evt);
            }
        });

        btnVendaCancelar.setText("Cancelar");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 738, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(273, 273, 273)
                .addComponent(btnVendaOK, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnVendaCancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVendaOK, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVendaCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        TabbedPaneVendas.addTab("Digitar", jPanel2);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Vendas");

        javax.swing.GroupLayout PainelLateralVendasLayout = new javax.swing.GroupLayout(PainelLateralVendas);
        PainelLateralVendas.setLayout(PainelLateralVendasLayout);
        PainelLateralVendasLayout.setHorizontalGroup(
            PainelLateralVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLateralVendasLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(TabbedPaneVendas)
        );
        PainelLateralVendasLayout.setVerticalGroup(
            PainelLateralVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLateralVendasLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TabbedPaneVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        TabbedPanePrincipal.addTab("Vendas", PainelLateralVendas);

        jLabel17.setText("Vendas");

        jLabel18.setText("Até");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDataVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDataAte, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(300, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtDataVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(txtDataAte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1))
        );

        tblSintetico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Data", "CPF Cliente", "Nome Cliente", "Valor total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblSintetico);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 734, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jLabel19.setText("Valor total");

        txtValorTotal.setEnabled(false);

        jLabel20.setText("Registros");

        txtRegistros.setEnabled(false);

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel20)
                        .addComponent(txtRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Sintetica", jPanel6);

        btnConsultarAnalitico.setText("Consultar");
        btnConsultarAnalitico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarAnaliticoActionPerformed(evt);
            }
        });

        tblAnalitico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CPF", "ID Produto", "Nome Produto", "Quantidade", "Valor unitário"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblAnalitico);

        jLabel23.setText("Valor total");

        txtValorAnalitico.setEnabled(false);

        jLabel24.setText("Registros");

        txtRegistrosAnalitico.setEnabled(false);

        jLabel21.setText("Vendas");

        jLabel22.setText("Até");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtValorAnalitico, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRegistrosAnalitico, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConsultarAnalitico, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel22)
                        .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnConsultarAnalitico))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtValorAnalitico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel24)
                        .addComponent(txtRegistrosAnalitico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Analitica", jPanel7);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setText("Relatório");

        javax.swing.GroupLayout PainelLateralRelatoriosLayout = new javax.swing.GroupLayout(PainelLateralRelatorios);
        PainelLateralRelatorios.setLayout(PainelLateralRelatoriosLayout);
        PainelLateralRelatoriosLayout.setHorizontalGroup(
            PainelLateralRelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
            .addGroup(PainelLateralRelatoriosLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel16)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PainelLateralRelatoriosLayout.setVerticalGroup(
            PainelLateralRelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLateralRelatoriosLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2)
                .addGap(12, 12, 12))
        );

        TabbedPanePrincipal.addTab("Relatórios", PainelLateralRelatorios);

        PainelHeader.setToolTipText("Painel header");

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        lblHeader.setForeground(new java.awt.Color(51, 51, 51));
        lblHeader.setText("Xablau tech");

        imgLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imgLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hacker (1).png"))); // NOI18N

        javax.swing.GroupLayout PainelHeaderLayout = new javax.swing.GroupLayout(PainelHeader);
        PainelHeader.setLayout(PainelHeaderLayout);
        PainelHeaderLayout.setHorizontalGroup(
            PainelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PainelHeaderLayout.setVerticalGroup(
            PainelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelHeaderLayout.createSequentialGroup()
                .addGroup(PainelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imgLogo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addGroup(PainelHeaderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PainelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        PainelFooter.setToolTipText("Painel header");

        lblFooter.setForeground(new java.awt.Color(51, 51, 51));
        lblFooter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFooter.setText("@Xablau Tech - Direitos reservardos - 2024");

        javax.swing.GroupLayout PainelFooterLayout = new javax.swing.GroupLayout(PainelFooter);
        PainelFooter.setLayout(PainelFooterLayout);
        PainelFooterLayout.setHorizontalGroup(
            PainelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblFooter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PainelFooterLayout.setVerticalGroup(
            PainelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblFooter, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TabbedPanePrincipal)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PainelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PainelFooter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PainelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TabbedPanePrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PainelFooter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("");
        getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBairroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBairroActionPerformed

    private void rbtnMasculinoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnMasculinoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnMasculinoClienteActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void txtEstoqueProdutoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstoqueProdutoKeyTyped
        char letra = evt.getKeyChar();

        if(!Validacao.validaNumero(evt, letra)) {    
            this.lblStatusProduto.setText("STATUS: ESTOQUE INVÁLIDO");
            this.lblStatusProduto.setForeground(Color.red);
        } else {
            this.lblStatusProduto.setText("STATUS: VÁLIDO");
            this.lblStatusProduto.setForeground(Color.green);
        }
    }//GEN-LAST:event_txtEstoqueProdutoKeyTyped

    private void txtNomeProdutoDigitarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeProdutoDigitarFocusLost
        if(!Validacao.validaStringVazia(this.txtNomeProdutoDigitar.getText())) {
            this.lblStatusProduto.setText("STATUS: NOME INVÁLIDO");
            this.lblStatusProduto.setForeground(Color.red);
        } else {
            this.lblStatusProduto.setText("STATUS: VÁLIDO");
            this.lblStatusProduto.setForeground(Color.green);
        }
    }//GEN-LAST:event_txtNomeProdutoDigitarFocusLost

    private void txtCategoriaProdutoDigitarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCategoriaProdutoDigitarFocusLost
        if(!Validacao.validaStringVazia(this.txtCategoriaProdutoDigitar.getText())) {
            this.lblStatusProduto.setText("STATUS: CATEGORIA INVÁLIDO");
            this.lblStatusProduto.setForeground(Color.red);
        } else {
            this.lblStatusProduto.setText("STATUS: VÁLIDO");
            this.lblStatusProduto.setForeground(Color.green);
        }
    }//GEN-LAST:event_txtCategoriaProdutoDigitarFocusLost

    private void btnCancelarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarProdutoActionPerformed
        // Zera os campos
        limpaCamposProduto();
        
        // Volta para guia de consulta
        this.TabbedPaneProdutos.setSelectedIndex(0);
        this.lblAcaoDigitarProduto.setText("Inserir");
    }//GEN-LAST:event_btnCancelarProdutoActionPerformed

    private void btnOkProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkProdutoActionPerformed
        if (validaCamposObrigatoriosProduto()) {
            return;
        }
        
        String nome = this.txtNomeProdutoDigitar.getText().trim();
        String modelo = this.txtModeloProdutoDigitar.getText().trim();
        String categoria = this.txtCategoriaProdutoDigitar.getText().trim();
        String fabricante = this.txtFabricanteProduto.getText().trim();
        String cor = this.cboCor.getSelectedItem().toString();
        String precoString = this.txtPrecoProduto.getText().trim();
        String estoqueString = this.txtEstoqueProduto.getText().trim();
        
        // Tratando string de preco para evitar erro de conversão
        precoString = precoString.replaceAll("\\.", "");
        precoString = precoString.replaceAll("\\,", ".");
        
        String idString = this.txtIDProduto.getText().trim();
        int id = 0;
        if(!idString.equals("")) {
            id = Integer.parseInt(idString);
        }
        double preco = Double.parseDouble(precoString);
        int estoque = Integer.parseInt(estoqueString);
        
        if (this.lblAcaoDigitarProduto.getText().equals("Inserir")) {
            Produto produto = new Produto(nome, modelo, categoria, fabricante, cor, preco, estoque);
            ProdutoDao dao = new ProdutoDao();
            boolean inseriu = dao.inserir(produto);
            if (inseriu) {
                limpaCamposProduto();
                JOptionPane.showMessageDialog(rootPane, "Produto inserido com sucesso");
            }
        } else {
            Produto produto = new Produto(id, nome, modelo, categoria, fabricante, cor, preco, estoque);
            ProdutoDao dao = new ProdutoDao();
            boolean alterou = dao.alterar(produto);
            
            if (alterou) {
                limpaCamposProduto();     
                JOptionPane.showMessageDialog(rootPane, "Produto alterado com sucesso");
                this.TabbedPaneProdutos.setSelectedIndex(0);
                this.lblAcaoDigitarProduto.setText("Inserir");
                this.btnConsultarProduto.doClick();
            }
        }
    }//GEN-LAST:event_btnOkProdutoActionPerformed
    
    private boolean validaCamposObrigatoriosProduto() {
        String nome = this.txtNomeProdutoDigitar.getText().trim();
        String categoria = this.txtCategoriaProdutoDigitar.getText().trim();
        String preco = this.txtPrecoProduto.getText().trim();
        String estoque = this.txtEstoqueProduto.getText().trim();
        
        if (nome.equals("") || categoria.equals("") || preco.equals("") || estoque.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos obrigatórios");
            return true;
        }
        
        if (preco.charAt(0) == '-') {
            JOptionPane.showMessageDialog(rootPane, "Preencha o preço com um valor positivo");
            return true;
        }
        
        return false;
    }
    
    private void limpaCamposProduto() {
        this.txtIDProduto.setText("");
        this.txtNomeProdutoDigitar.setText("");
        this.txtModeloProdutoDigitar.setText("");
        this.txtCategoriaProdutoDigitar.setText("");
        this.txtFabricanteProduto.setText("");
        this.cboCor.setSelectedIndex(0);
        this.txtPrecoProduto.setValue(null);
        this.txtPrecoProduto.setText("");
        this.txtEstoqueProduto.setText("");
    }
    
    private void btnIncluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirProdutoActionPerformed
        limpaCamposProduto();
        this.TabbedPaneProdutos.setSelectedIndex(1);
        this.lblAcaoDigitarProduto.setText("Inserir");
    }//GEN-LAST:event_btnIncluirProdutoActionPerformed

    private void btnExcluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirProdutoActionPerformed
        int linha = this.tblProduto.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(rootPane, "Selecione um item antes de excluir");
            return;
        }
        
        DefaultTableModel tabela = (DefaultTableModel)this.tblProduto.getModel();
        
        Object[] opcoes = {"Sim, quero excluir", "Não, cancelar"};
        int escolha = JOptionPane.showOptionDialog(
                rootPane, 
                "Tem certeza que deseja excluir esse item?", 
                "Excluir item", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[0]);
        
        if(escolha == 1 || escolha == JOptionPane.CLOSED_OPTION) {
            return;
        }
        
        int id = Integer.parseInt(this.tblProduto.getValueAt(linha, 0).toString());
        
        ProdutoDao dao = new ProdutoDao();
        boolean excluiu = dao.excluir(id);
        if (excluiu) {     
            tabela.removeRow(linha);
            JOptionPane.showMessageDialog(rootPane, "Produto excluido com sucesso");
        }
    }//GEN-LAST:event_btnExcluirProdutoActionPerformed

    private void btnAlterarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarProdutoActionPerformed
        DefaultTableModel tabela = (DefaultTableModel)this.tblProduto.getModel();
        int linha = this.tblProduto.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(rootPane, "Selecione um item antes de alterar");
            return;
        }
        
        this.txtIDProduto.setText(tabela.getValueAt(linha, 0).toString());
        this.txtNomeProdutoDigitar.setText(tabela.getValueAt(linha, 1).toString());
        this.txtModeloProdutoDigitar.setText(tabela.getValueAt(linha, 2).toString());
        this.txtCategoriaProdutoDigitar.setText(tabela.getValueAt(linha, 3).toString());
        this.txtPrecoProduto.setText(tabela.getValueAt(linha, 4).toString());
        this.txtEstoqueProduto.setText(tabela.getValueAt(linha, 5).toString());
        this.txtFabricanteProduto.setText(tabela.getValueAt(linha, 6).toString());
        
        // passa por todos items do combo comparando se o item atual, 
        // é igual o valor na tabela
        for (int i = 0; i < this.cboCor.getItemCount(); i++) {
            this.cboCor.setSelectedIndex(i);
            
            if(this.cboCor.getSelectedItem().toString().equals(tabela.getValueAt(linha, 7).toString())) {
                this.cboCor.setSelectedIndex(i);
                break;
            }
        }

        this.lblAcaoDigitarProduto.setText("Alterar");
        this.TabbedPaneProdutos.setSelectedIndex(1);
    }//GEN-LAST:event_btnAlterarProdutoActionPerformed

    private void btnConsultarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarProdutoActionPerformed
        String filtro = this.txtNomeProdutoConsultar.getText().strip();
        if (filtro.equals("")) {
            listarProduto();
        } else {
            listarProduto(filtro);
        }
    }//GEN-LAST:event_btnConsultarProdutoActionPerformed

    private void listarProduto() {
        ProdutoDao dao = new ProdutoDao();
        ArrayList<Produto> produtoList = null;
        
        DefaultTableModel model = (DefaultTableModel)this.tblProduto.getModel();
        model.setRowCount(0);
        
        produtoList = dao.listar();
        if (produtoList.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Não há itens a serem listados");
            return;
        }
        
        for (Produto item : produtoList) {
            model.addRow(new String[] {
                String.valueOf(item.getId()),
                String.valueOf(item.getNome()),
                String.valueOf(item.getModelo()),
                String.valueOf(item.getCategoria()),
                String.valueOf(item.getPreco()),
                String.valueOf(item.getEstoque()),
                String.valueOf(item.getFabricante()),
                String.valueOf(item.getCor())
            });
        }
    };

    private void listarProduto(String filtro) {
        ProdutoDao dao = new ProdutoDao();
        ArrayList<Produto> produtoList = null;
        
        DefaultTableModel model = (DefaultTableModel)this.tblProduto.getModel();
        model.setRowCount(0);
        
        produtoList = dao.listar(filtro);
        if (produtoList.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Não há itens a serem listados");
            return;
        }
        
        for (Produto item : produtoList) {
            model.addRow(new String[] {
                String.valueOf(item.getId()),
                String.valueOf(item.getNome()),
                String.valueOf(item.getModelo()),
                String.valueOf(item.getCategoria()),
                String.valueOf(item.getPreco()),
                String.valueOf(item.getEstoque()),
                String.valueOf(item.getFabricante()),
                String.valueOf(item.getCor())
            });
        }
    }
    
    private Produto listarProduto(int id) {
        ProdutoDao dao = new ProdutoDao();
        ArrayList<Produto> produtoList = null;
        
        produtoList = dao.listar(id);
        if (produtoList.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Esse produto não existe no sistema");
            return null;
        }
        
        Produto item = produtoList.getFirst();
        return item;
    }
    
    private void txtNomeClienteDigitarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeClienteDigitarFocusLost
        if(!Validacao.validaStringVazia(this.txtNomeClienteDigitar.getText())) {
            this.lblStatusCliente.setText("STATUS: NOME INVÁLIDO");
            this.lblStatusCliente.setForeground(Color.red);
        } else {
            this.lblStatusCliente.setText("STATUS: VÁLIDO");
            this.lblStatusCliente.setForeground(Color.green);
        }
    }//GEN-LAST:event_txtNomeClienteDigitarFocusLost

    private void fTxtCpfDigitarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fTxtCpfDigitarFocusLost
        String cpf = fTxtCpfDigitar.getText();
        
        if(cpf.equals("   .   .   -  ")){
            this.lblStatusCliente.setText("STATUS: CPF INVÁLIDO");
            this.lblStatusCliente.setForeground(Color.red);
        }else {
            this.lblStatusCliente.setText("STATUS: VÁLIDO");
            this.lblStatusCliente.setForeground(Color.green);
        }
    }//GEN-LAST:event_fTxtCpfDigitarFocusLost

    private void fTxtCpfDigitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fTxtCpfDigitarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fTxtCpfDigitarActionPerformed

    private void fTxtTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fTxtTelefoneActionPerformed
        
    }//GEN-LAST:event_fTxtTelefoneActionPerformed

    private void fTxtTelefoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fTxtTelefoneFocusLost
        String telefone = fTxtTelefone.getText();
        
        if(telefone.equals("(  )      -    ")){
            this.lblStatusCliente.setText("STATUS: TELEFONE INVÁLIDO");
            this.lblStatusCliente.setForeground(Color.red);
        }else {
            this.lblStatusCliente.setText("STATUS: VÁLIDO");
            this.lblStatusCliente.setForeground(Color.green);
        }
    }//GEN-LAST:event_fTxtTelefoneFocusLost

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        if(!Validacao.validaStringVazia(this.txtEmail.getText())) {
            this.lblStatusCliente.setText("STATUS: EMAIL INVÁLIDO");
            this.lblStatusCliente.setForeground(Color.red);
        } else {
            this.lblStatusCliente.setText("STATUS: VÁLIDO");
            this.lblStatusCliente.setForeground(Color.green);
        }
    }//GEN-LAST:event_txtEmailFocusLost

    private void fTxtCepDigitarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fTxtCepDigitarFocusLost
        String cep = fTxtCepDigitar.getText();
        
        if(cep.equals("     -   ")){
            this.lblStatusCliente.setText("STATUS: CEP INVÁLIDO");
            this.lblStatusCliente.setForeground(Color.red);
        }else {
            this.lblStatusCliente.setText("STATUS: VÁLIDO");
            this.lblStatusCliente.setForeground(Color.green);
        }
    }//GEN-LAST:event_fTxtCepDigitarFocusLost

    private void txtLogradouroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLogradouroFocusLost
        if(!Validacao.validaStringVazia(this.txtLogradouro.getText())) {
            this.lblStatusCliente.setText("STATUS: LOGRADOURO INVÁLIDO");
            this.lblStatusCliente.setForeground(Color.red);
        } else {
            this.lblStatusCliente.setText("STATUS: VÁLIDO");
            this.lblStatusCliente.setForeground(Color.green);
        }
    }//GEN-LAST:event_txtLogradouroFocusLost

    private void PainelLateralProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PainelLateralProdutosMouseClicked
        
    }//GEN-LAST:event_PainelLateralProdutosMouseClicked

    private void fTxtNumeroDigitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fTxtNumeroDigitarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fTxtNumeroDigitarActionPerformed

    private void fTxtNumeroDigitarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fTxtNumeroDigitarFocusLost
    
        if(fTxtNumeroDigitar.getText().isEmpty()){
            this.lblStatusCliente.setText("STATUS: NÚMERO INVÁLIDO");
            this.lblStatusCliente.setForeground(Color.red);
        } else {
            this.lblStatusCliente.setText("STATUS: VÁLIDO");
            this.lblStatusCliente.setForeground(Color.green);
        }
    }//GEN-LAST:event_fTxtNumeroDigitarFocusLost

    private void txtBairroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBairroFocusLost
        if(!Validacao.validaStringVazia(this.txtBairro.getText())) {
            this.lblStatusCliente.setText("STATUS: BAIRRO INVÁLIDO");
            this.lblStatusCliente.setForeground(Color.red);
        } else {
            this.lblStatusCliente.setText("STATUS: VÁLIDO");
            this.lblStatusCliente.setForeground(Color.green);
        }
    }//GEN-LAST:event_txtBairroFocusLost

    private void txtCidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCidadeFocusLost
        if(!Validacao.validaStringVazia(this.txtCidade.getText())) {
            this.lblStatusCliente.setText("STATUS: CIDADE INVÁLIDA");
            this.lblStatusCliente.setForeground(Color.red);
        } else {
            this.lblStatusCliente.setText("STATUS: VÁLIDO");
            this.lblStatusCliente.setForeground(Color.green);
        }
    }//GEN-LAST:event_txtCidadeFocusLost

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        if(validaCamposObrigatoriosCliente()) {
            return;
        }
        
        String nome = this.txtNomeClienteDigitar.getText();
        String cpf = this.fTxtCpfDigitar.getText().replaceAll("[\\.\\-]", "");
        String telefone = this.fTxtTelefone.getText().replaceAll("[()\\-]", "").trim();
        String email = this.txtEmail.getText(); 
        
        String estadoCivil = null;
        if (this.cboEstadoCivil.getSelectedIndex() == 0) {
            estadoCivil = "";
        } else { 
            this.cboEstadoCivil.getSelectedItem().toString();
        }
        
        Date dataNascimento = this.txtDataNascimento.getDate();
        String cep = this.fTxtCepDigitar.getText().replaceAll("[\\-]", "").trim();
        String logradouro = this.txtLogradouro.getText();
        int numero = Integer.parseInt(this.fTxtNumeroDigitar.getText());
        String complemento = this.txtComplemento.getText();
        String bairro = this.txtBairro.getText();
        String cidade = this.txtCidade.getText();
        String estado = this.cboEstado.getSelectedItem().toString();
        String pais = this.cboPais.getSelectedItem().toString();
        
        String sexo;
        if (this.rbtnFemininoCliente.isSelected()) {
            sexo = this.rbtnFemininoCliente.getActionCommand().substring(0, 1);
        } else {
            sexo = this.rbtnMasculinoCliente.getActionCommand().substring(0, 1);
        }
        
        Cliente cliente = new Cliente(cpf, nome, telefone, email, sexo, estadoCivil, dataNascimento, cep, logradouro, numero, complemento, bairro, cidade, estado, pais);
        ClienteDao dao = new ClienteDao();
            
        if (this.lblAcaoDigitarCliente.getText().equals("Inserir")) {
            boolean inseriu = dao.inserir(cliente);
            if (inseriu) {
                limpaCamposCliente();
                JOptionPane.showMessageDialog(rootPane, "Cliente cadastrado com sucesso");
            }
        } else {
            boolean alterou = dao.alterar(cliente);
            if (alterou) {
                limpaCamposCliente();
                this.fTxtCpfDigitar.setEnabled(true);
                JOptionPane.showMessageDialog(rootPane, "Cliente alterado com sucesso");
                this.TabbedPaneClientes.setSelectedIndex(0);
                this.lblAcaoDigitarCliente.setText("Inserir");
                this.btnConsultarCliente.doClick();
            }
        }
    }//GEN-LAST:event_btnOKActionPerformed

    private void limpaCamposCliente() {
        // textField
        this.txtNomeClienteDigitar.setText("");
        this.txtLogradouro.setText("");
        this.txtEmail.setText("");
        this.txtComplemento.setText("");
        this.txtBairro.setText("");
        this.txtCidade.setText("");
        
        // JFormattedField
        this.fTxtCpfDigitar.setText("");
        this.fTxtCpfDigitar.setValue(null);
        this.fTxtTelefone.setText("");
        this.fTxtTelefone.setValue(null);
        this.txtDataNascimento.setDate(null);
        this.fTxtCepDigitar.setText("");
        this.fTxtCepDigitar.setValue(null);
        this.fTxtNumeroDigitar.setText("");
        this.fTxtNumeroDigitar.setValue(null);
        
        // buttonGroup and comboBox
        this.buttonGroupSexo.clearSelection();
        this.cboEstadoCivil.setSelectedIndex(0);
        this.cboEstado.setSelectedIndex(0);
        this.cboPais.setSelectedIndex(0);
    }
    
    private boolean validaCamposObrigatoriosCliente() {
        String nome = this.txtNomeClienteDigitar.getText();
        String cpf = this.fTxtCpfDigitar.getText();
        String email = this.txtEmail.getText();
        String cep = this.fTxtCepDigitar.getText();
        String logradouro = this.txtLogradouro.getText();
        String numero = this.fTxtNumeroDigitar.getText();
        String complemento = this.txtComplemento.getText();
        String bairro = this.txtBairro.getText();
        String cidade = this.txtCidade.getText();
        String estado = this.cboEstado.getSelectedItem().toString();
        String pais = this.cboPais.getSelectedItem().toString();
        
        String[] infos = {
            nome, cpf, email, cep, logradouro, complemento, bairro, cidade, estado, pais
        };
        
        for (int i = 0; i < infos.length; i++) {
            if (infos[i].equals("") || infos[i].equals("Selecione")) {
                JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos obrigatórios");
                return true;
            }
        }
        
        return false;
    }
    
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpaCamposCliente();
        
        this.fTxtCpfDigitar.setEnabled(true);
        this.TabbedPaneClientes.setSelectedIndex(0);
        this.lblAcaoDigitarCliente.setText("Inserir");
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtEstoqueProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEstoqueProdutoFocusLost
        if (!Validacao.validaConversaoInteiro(this.txtEstoqueProduto.getText())) {
            this.lblStatusProduto.setText("STATUS: ESTOQUE INVÁLIDO");
            this.lblStatusProduto.setForeground(Color.red);
            this.txtEstoqueProduto.setText("");
        } else {
            this.lblStatusProduto.setText("STATUS: VÁLIDO");
            this.lblStatusProduto.setForeground(Color.green);
        }
    }//GEN-LAST:event_txtEstoqueProdutoFocusLost

    private void btnVendaItemAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendaItemAdicionarActionPerformed
        if (this.txtVendaIDProduto.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Selecione um produto antes de adicionar");
            return;
        }
 
        if(this.txtVendaQtdPedido.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Preencha o campo Qtd. Pedido");
            return;
        }
        
        int qtdPedido = Integer.parseInt(this.txtVendaQtdPedido.getText().trim()); 
        int qtdEstoque = Integer.parseInt(this.txtVendaQtdEstoque.getText().trim()); 
        int estoqueAtual = qtdEstoque - qtdPedido;
        if (estoqueAtual < 0) {
            JOptionPane.showMessageDialog(rootPane, "Estoque esgotado para este produto");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel)this.tblItensVenda.getModel();
        
        int idProduto = Integer.parseInt(this.txtVendaIDProduto.getText().trim());
        int linha = verificarProdutoAdicionado(idProduto);
        if(linha > -1) {
            model.setValueAt(this.txtVendaIDProduto.getText(), linha, 0);
            model.setValueAt(this.txtVendaNomeProduto.getText(), linha, 1);
            model.setValueAt(this.txtVendaPrecoProduto.getText(), linha, 2);
            model.setValueAt(this.txtVendaQtdPedido.getText(), linha, 3);
        } else {
            model.addRow(new String[] {
                String.valueOf(this.txtVendaIDProduto.getText()),
                String.valueOf(this.txtVendaNomeProduto.getText()),
                String.valueOf(this.txtVendaPrecoProduto.getText()),
                String.valueOf(this.txtVendaQtdPedido.getText())
            });
        }
          
        calcularValorTotal();
        limparCamposItemVenda();
    }//GEN-LAST:event_btnVendaItemAdicionarActionPerformed

    private void limparCamposItemVenda() {
        this.txtVendaIDProduto.setText("");
        this.txtVendaNomeProduto.setText("");
        this.txtVendaPrecoProduto.setText("");
        this.txtVendaQtdPedido.setText("");
        this.txtVendaQtdEstoque.setText("");
    }
    
    private void limparCamposItemVenda(boolean limparTabela) {
        this.txtVendaIDProduto.setText("");
        this.txtVendaNomeProduto.setText("");
        this.txtVendaPrecoProduto.setText("");
        this.txtVendaQtdPedido.setText("");
        this.txtVendaQtdEstoque.setText("");
        this.txtVendaValorTotal.setText("");
        if (limparTabela) {
            DefaultTableModel model = (DefaultTableModel)this.tblItensVenda.getModel();
            model.setRowCount(0);
        }
    }
    
    private int verificarProdutoAdicionado(int id) {
        DefaultTableModel model = (DefaultTableModel)this.tblItensVenda.getModel();
        int linhas = model.getRowCount();
        
        int idTabela = 0;
        for (int i = 0; i < linhas; i++) {
            idTabela = Integer.parseInt(model.getValueAt(i, 0).toString());
            if (id == idTabela) {
                return i;
            }
        }
        
        return -1;
    }
    
    private void calcularValorTotal() {
        DefaultTableModel model = (DefaultTableModel)this.tblItensVenda.getModel();
        int linhas = model.getRowCount();
       
        double valorTotal = 0;
        double valorItem = 0;
        for (int i = 0; i < linhas; i++) {
            valorItem = Double.parseDouble(model.getValueAt(i, 2).toString()) * Integer.parseInt(model.getValueAt(i, 3).toString());
            valorTotal += valorItem;
        }
       
        this.txtVendaValorTotal.setText(String.valueOf(valorTotal));
    }
    
    private void btnExcluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirClienteActionPerformed
        int linha = this.tblCliente.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(rootPane, "Selecione um item antes de excluir");
            return;
        }
        
        DefaultTableModel tabela = (DefaultTableModel)this.tblCliente.getModel();
        Object[] opcoes = {"Sim, quero excluir", "Não, cancelar"};
        int escolha = JOptionPane.showOptionDialog(
                rootPane, 
                "Tem certeza que deseja excluir esse item?", 
                "Excluir item", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[0]);
        
        if(escolha == 1 || escolha == JOptionPane.CLOSED_OPTION) {
            return;
        }
        
        String cpf = this.tblCliente.getValueAt(linha, 0).toString();
        
        ClienteDao dao = new ClienteDao();
        boolean excluiu = dao.excluir(cpf);
        if (excluiu) {
            tabela.removeRow(linha);
            JOptionPane.showMessageDialog(rootPane, "Cliente excluido com sucesso");
        }
    }//GEN-LAST:event_btnExcluirClienteActionPerformed

    private void btnAlterarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarClienteActionPerformed
        DefaultTableModel tabela = (DefaultTableModel)this.tblCliente.getModel();
        int linha = this.tblCliente.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(rootPane, "Selecione um item antes de alterar");
            return;
        }
                               
        this.fTxtCpfDigitar.setText(tabela.getValueAt(linha, 0).toString());
        this.txtNomeClienteDigitar.setText(tabela.getValueAt(linha, 1).toString());
        this.fTxtTelefone.setText(tabela.getValueAt(linha, 2).toString());
        this.txtEmail.setText(tabela.getValueAt(linha, 3).toString());
        
        String sexo = tabela.getValueAt(linha, 4).toString();
        if (sexo.equals("M")) {
            this.rbtnMasculinoCliente.setSelected(true);
        } else {
            this.rbtnFemininoCliente.setSelected(true);
        }
        
        acharItemCombo(this.cboEstadoCivil, tabela, linha, 5);
        
        try {
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            Date data = formatter.parse(tabela.getValueAt(linha, 6).toString());
            this.txtDataNascimento.setDate(data);
        } catch(Exception err) {
            JOptionPane.showMessageDialog(rootPane, "Falha ao tratar Data de Nascimento");
        }
        
        this.fTxtCepDigitar.setText(tabela.getValueAt(linha, 7).toString());
        this.txtLogradouro.setText(tabela.getValueAt(linha, 8).toString());
        this.fTxtNumeroDigitar.setText(tabela.getValueAt(linha, 9).toString());
        this.txtComplemento.setText(tabela.getValueAt(linha, 10).toString());
        this.txtBairro.setText(tabela.getValueAt(linha, 11).toString());
        this.txtCidade.setText(tabela.getValueAt(linha, 12).toString());
        acharItemCombo(this.cboEstado, tabela, linha, 13);
        acharItemCombo(this.cboPais, tabela, linha, 14);
        
        this.fTxtCpfDigitar.setEnabled(false);
        this.lblAcaoDigitarCliente.setText("Alterar");
        this.TabbedPaneClientes.setSelectedIndex(1);
    }//GEN-LAST:event_btnAlterarClienteActionPerformed

    private void btnIncluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirClienteActionPerformed
        limpaCamposCliente();
        this.fTxtCpfDigitar.setEnabled(true);
        this.TabbedPaneClientes.setSelectedIndex(1);
        this.lblAcaoDigitarCliente.setText("Inserir");
    }//GEN-LAST:event_btnIncluirClienteActionPerformed

    private void btnConsultarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarClienteActionPerformed
        String nome = this.txtNomeClienteConsultar.getText().trim();
        String cpf = this.fTxtCpfConsultar.getText().replaceAll("[\\.\\-]", "").trim();

        if (nome.equals("") && cpf.equals("")) {
            listarCliente();
        } else {
            listarCliente(nome, cpf);
        }
    }//GEN-LAST:event_btnConsultarClienteActionPerformed

    private void fTxtCpfConsultarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fTxtCpfConsultarFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_fTxtCpfConsultarFocusLost

    private void fTxtCpfConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fTxtCpfConsultarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fTxtCpfConsultarActionPerformed

    private void fTxtVendaCpfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fTxtVendaCpfFocusLost
        if (this.fTxtVendaCpf.getText().trim().equals("")) {
            this.txtVendaClienteNome.setText("");
            return;
        }
        
        String cpf = this.fTxtVendaCpf.getText().replaceAll("[\\.\\-]", "").trim();        
        Cliente item = listarCliente(cpf);
        if (item == null) {
            this.fTxtVendaCpf.setText("");
            this.fTxtVendaCpf.setValue(null);
            this.txtVendaClienteNome.setText("");
            return;
        }
        
        this.txtVendaClienteNome.setText(item.getNome());
    }//GEN-LAST:event_fTxtVendaCpfFocusLost

    private void fTxtVendaCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fTxtVendaCpfActionPerformed
     
    }//GEN-LAST:event_fTxtVendaCpfActionPerformed
    
    private void txtVendaNomeProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVendaNomeProdutoFocusLost
        
    }//GEN-LAST:event_txtVendaNomeProdutoFocusLost

    private void txtVendaIDProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVendaIDProdutoFocusLost
        if (this.txtVendaIDProduto.getText().trim().equals("")) {
            limparProdutoVenda();
            return;
        }
        
        int id = Integer.parseInt(this.txtVendaIDProduto.getText());
        if (id <= 0) {
            JOptionPane.showMessageDialog(rootPane, "ID inválido! Vá até a tela de produtos e consulte um ID");
            limparProdutoVenda();
            return;
        }
        
        Produto item = listarProduto(id);
        
        this.txtVendaNomeProduto.setText(item.getNome());
        this.txtVendaPrecoProduto.setText(String.valueOf(item.getPreco()));
        this.txtVendaQtdEstoque.setText(String.valueOf(item.getEstoque()));
    }//GEN-LAST:event_txtVendaIDProdutoFocusLost

    private void limparProdutoVenda() {
        this.txtVendaNomeProduto.setText("");
        this.txtVendaPrecoProduto.setText("");
        this.txtVendaQtdEstoque.setText("");
    }
    
    private void txtVendaIDProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVendaIDProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVendaIDProdutoActionPerformed

    private void btnVendaItemAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendaItemAlterarActionPerformed
        DefaultTableModel tabela = (DefaultTableModel)this.tblItensVenda.getModel();
        int linha = this.tblItensVenda.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(rootPane, "Selecione um item antes de alterar");
            return;
        }
                               
        this.txtVendaIDProduto.setText(tabela.getValueAt(linha, 0).toString());
        this.txtVendaQtdPedido.setText(tabela.getValueAt(linha, 3).toString());
        
        this.txtVendaIDProduto.requestFocus();
        this.txtVendaIDProduto.transferFocus();
        
        calcularValorTotal();
    }//GEN-LAST:event_btnVendaItemAlterarActionPerformed

    private void btnVendaItemExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendaItemExcluirActionPerformed
        DefaultTableModel tabela = (DefaultTableModel)this.tblItensVenda.getModel();
        int linha = this.tblItensVenda.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(rootPane, "Selecione um item antes de excluir");
            return;
        }
        
        Object[] opcoes = {"Sim, quero excluir", "Não, cancelar"};
        int escolha = JOptionPane.showOptionDialog(
                rootPane, 
                "Tem certeza que deseja excluir esse item?", 
                "Excluir item", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[0]);
        
        if(escolha == 1 || escolha == JOptionPane.CLOSED_OPTION) {
            return;
        }
        
        tabela.removeRow(linha);
        calcularValorTotal();
    }//GEN-LAST:event_btnVendaItemExcluirActionPerformed

    private void btnVendaOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendaOKActionPerformed
        int linhasItem = this.tblItensVenda.getRowCount();
        if (linhasItem <= 0) {
            JOptionPane.showMessageDialog(rootPane, "O Pedido deve conter ao menos um item");
            return;
        }
            
        String cpf = this.fTxtVendaCpf.getText().replaceAll("[\\.\\-]", "").trim();
        Date dataVenda = this.txtDataVenda.getDate();
        Double valorTotal = Double.parseDouble(this.txtVendaValorTotal.getText());
        
        if (cpf.equals("") || dataVenda == null || valorTotal <= 0) {
            JOptionPane.showMessageDialog(rootPane, "Preencha corretamente as duas etapas antes de continuar");
            return;
        }
        
        if (this.btnVendaOK.getText().equals("Inserir")) {
            Venda venda = new Venda(cpf, dataVenda, valorTotal);
            VendaDao vendaDao = new VendaDao();
            long idPedido = vendaDao.inserir(venda);
            if (idPedido > 0) {
                if (inserirItensPedido(idPedido)) {
                    limparCamposItemVenda(true);
                    limparCamposVenda();
                    this.btnVendaOK.setText("Inserir");
                    JOptionPane.showMessageDialog(rootPane, "Pedido inserido com sucesso");
                }
            }
        } else {
            int idPedido = Integer.parseInt(this.txtVendaID.getText());
            
            Venda venda = new Venda(idPedido, cpf, dataVenda, valorTotal);
            VendaDao vendaDao = new VendaDao();
            boolean alterou = vendaDao.alterar(venda);
            if (alterou) {
                if (alterarItensPedido(idPedido)) {
                    limparCamposItemVenda(true);
                    limparCamposVenda();
                    this.btnVendaOK.setText("Inserir");
                    JOptionPane.showMessageDialog(rootPane, "Pedido alterado com sucesso");
                }
            }
        }
    }//GEN-LAST:event_btnVendaOKActionPerformed

    private boolean alterarItensPedido(int idPedido) {
        DefaultTableModel model = (DefaultTableModel)this.tblItensVenda.getModel();
        VendaItemDao vendaItemDao = new VendaItemDao();
        
        vendaItemDao.excluirTodos(idPedido);
        return inserirItensPedido(idPedido);
    }
    
    private void btnVendaIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendaIncluirActionPerformed
        limparCamposVenda();
        limparCamposItemVenda();
        this.TabbedPaneVendas.setSelectedIndex(1);
        this.btnVendaOK.setText("Inserir");
    }//GEN-LAST:event_btnVendaIncluirActionPerformed

    private void btnVendaAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendaAlterarActionPerformed
        DefaultTableModel tabela = (DefaultTableModel)this.tblVenda.getModel();
        int linha = this.tblVenda.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(rootPane, "Selecione um item antes de alterar");
            return;
        }
     
        this.fTxtVendaCpf.setText(tabela.getValueAt(linha, 2).toString());
        this.txtVendaClienteNome.setText(tabela.getValueAt(linha, 3).toString());
        try {
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            Date data = formatter.parse(tabela.getValueAt(linha, 1).toString());
            this.txtDataVenda.setDate(data);
        } catch(Exception err) {
            JOptionPane.showMessageDialog(rootPane, "Falha ao tratar Data de Nascimento");
        }
        
        this.txtVendaValorTotal.setText(tabela.getValueAt(linha, 4).toString());
        this.txtVendaID.setText(tabela.getValueAt(linha, 0).toString());
        
        int idPedido = Integer.parseInt(tabela.getValueAt(linha, 0).toString()); 
        carregarItensPedido(idPedido);
        
        this.btnVendaOK.setText("Alterar");
        this.TabbedPaneVendas.setSelectedIndex(1);
    }//GEN-LAST:event_btnVendaAlterarActionPerformed

    private void carregarItensPedido(int idPedido) {
        VendaItemDao vendaItemDao = new VendaItemDao();
        ArrayList<ItemVenda> vendaItemList = null;
        
        DefaultTableModel model = (DefaultTableModel)this.tblItensVenda.getModel();
        model.setRowCount(0);
        
        vendaItemList = vendaItemDao.listarItensPedido(idPedido);
        if (vendaItemList.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Não há itens a serem listados nesse pedido");
            return;
        }
        
        for (ItemVenda item : vendaItemList) {
            model.addRow(new String[] {
                String.valueOf(item.getIdProduto()),
                String.valueOf(item.getNomeProduto()),
                String.valueOf(item.getPrecoProduto()),
                String.valueOf(item.getQuantidadeProduto())
            });
        }
    }
    
    private void btnVendaConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendaConsultarActionPerformed
        VendaDao dao = new VendaDao();
        ArrayList<Venda> vendaList = null;
        
        DefaultTableModel model = (DefaultTableModel)this.tblVenda.getModel();
        model.setRowCount(0);
        
        vendaList = dao.listar();
        if (vendaList.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Não há itens a serem listados");
            return;
        }
        
        for (Venda item : vendaList) {
            model.addRow(new String[] {
                String.valueOf(item.getId()),
                String.valueOf(item.getDataVenda()),
                String.valueOf(item.getCpf()),
                String.valueOf(item.getNomeCliente()),
                String.valueOf(item.getValorTotal())
            });
        }
    }//GEN-LAST:event_btnVendaConsultarActionPerformed

    private void btnVendaExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendaExcluirActionPerformed
        int linha = this.tblVenda.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(rootPane, "Selecione um item antes de excluir");
            return;
        }
        
        DefaultTableModel tabela = (DefaultTableModel)this.tblVenda.getModel();
        Object[] opcoes = {"Sim, quero excluir", "Não, cancelar"};
        int escolha = JOptionPane.showOptionDialog(
                rootPane, 
                "Tem certeza que deseja excluir esse item?", 
                "Excluir item", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[0]);
        
        if(escolha == 1 || escolha == JOptionPane.CLOSED_OPTION) {
            return;
        }
        
        int id = Integer.parseInt(this.tblVenda.getValueAt(linha, 0).toString());
        
        VendaDao dao = new VendaDao();
        boolean excluiu = dao.excluir(id);
        if (excluiu) {
            tabela.removeRow(linha);
            JOptionPane.showMessageDialog(rootPane, "Pedido excluido com sucesso");
        }
    }//GEN-LAST:event_btnVendaExcluirActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        SinteticoDao dao = new SinteticoDao();
        ArrayList<RelatorioSintetico> sintetico = null;
        Double resultadoTotal = 0.0;
        
        DefaultTableModel model = (DefaultTableModel)this.tblSintetico.getModel();
        model.setRowCount(0);
        
        sintetico = dao.listar();
        if (sintetico.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Não há itens a serem listados");
            return;
        }
        
        for (RelatorioSintetico item : sintetico) {
            model.addRow(new String[] {
                String.valueOf(item.getId()),
                String.valueOf(item.getDataVenda()),
                String.valueOf(item.getIdCliente()),
                String.valueOf(item.getNomeCliente()),
                String.valueOf(item.getValorTotal())
            });
        }
        
        for(RelatorioSintetico item : sintetico){
            resultadoTotal += item.getValorTotal();
        }
        txtValorTotal.setText(String.valueOf(resultadoTotal));
        
        txtRegistros.setText(String.valueOf(model.getRowCount()));
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnConsultarAnaliticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarAnaliticoActionPerformed
        AnaliticoDao dao = new AnaliticoDao();
        ArrayList<RelatorioAnalitico> analitico = null;
        Double resultadoTotal = 0.0;
        
        DefaultTableModel model = (DefaultTableModel)this.tblAnalitico.getModel();
        model.setRowCount(0);
        
        analitico = dao.listar();
        if (analitico.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Não há itens a serem listados");
            return;
        }
        
        for (RelatorioAnalitico item : analitico) {
            model.addRow(new String[] {
                String.valueOf(item.getCpf()),
                String.valueOf(item.getIdProduto()),
                String.valueOf(item.getNomeProduto()),
                String.valueOf(item.getQuantidadeProduto()),
                String.valueOf(item.getPrecoProduto())
            });
        }
        
        for(RelatorioAnalitico item : analitico){
            resultadoTotal += item.getPrecoProduto();
        }
        txtValorAnalitico.setText(String.valueOf(resultadoTotal));
        
        txtRegistrosAnalitico.setText(String.valueOf(model.getRowCount()));
    }//GEN-LAST:event_btnConsultarAnaliticoActionPerformed

    private boolean inserirItensPedido(long idPedido) {
        DefaultTableModel model = (DefaultTableModel)this.tblItensVenda.getModel();
        VendaItemDao vendaItemDao = new VendaItemDao();
        
        boolean inseriu = true;
        for (int i = 0; i < this.tblItensVenda.getRowCount(); i++) {
            int idProduto = Integer.parseInt(model.getValueAt(i, 0).toString());
            double preco = Double.parseDouble(model.getValueAt(i, 2).toString());
            int quantidade = Integer.parseInt(model.getValueAt(i, 3).toString());
            ItemVenda item = new ItemVenda(idPedido, idProduto, quantidade, preco);
            
            if (!vendaItemDao.inserir(item)) {
               inseriu = false; 
            }
        }
        
        return inseriu;
    }
    
    private void limparCamposVenda() {
        this.fTxtVendaCpf.setText("");
        this.txtVendaClienteNome.setText("");
        this.txtDataVenda.setDate(null);
        this.txtVendaID.setText("");
    }
    
    private void listarCliente() {
        ClienteDao dao = new ClienteDao();
        ArrayList<Cliente> clienteList = null;
        
        DefaultTableModel model = (DefaultTableModel)this.tblCliente.getModel();
        model.setRowCount(0);
        
        clienteList = dao.listar();
        if (clienteList.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Não há itens a serem listados");
            return;
        }
        
        for (Cliente item : clienteList) {
            model.addRow(new String[] {
                String.valueOf(item.getCpf()),
                String.valueOf(item.getNome()),
                String.valueOf(item.getTelefone()),
                String.valueOf(item.getEmail()),
                String.valueOf(item.getSexo()),
                String.valueOf(item.getEstadoCivil()),
                String.valueOf(item.getDataNascimento()),
                String.valueOf(item.getCep()),
                String.valueOf(item.getLogradouro()),
                String.valueOf(item.getNumero()),
                String.valueOf(item.getComplemento()),
                String.valueOf(item.getBairro()),
                String.valueOf(item.getCidade()),
                String.valueOf(item.getEstado()),
                String.valueOf(item.getPais())
            });
        }
    };

    private void listarCliente(String nome, String cpf) {
        ClienteDao dao = new ClienteDao();
        ArrayList<Cliente> clienteList = null;
        
        DefaultTableModel model = (DefaultTableModel)this.tblCliente.getModel();
        model.setRowCount(0);
        
        clienteList = dao.listar(nome, cpf);
        if (clienteList.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Não há itens a serem listados");
            return;
        }
        
        for (Cliente item : clienteList) {
            model.addRow(new String[] {
                String.valueOf(item.getCpf()),
                String.valueOf(item.getNome()),
                String.valueOf(item.getTelefone()),
                String.valueOf(item.getEmail()),
                String.valueOf(item.getSexo()),
                String.valueOf(item.getEstadoCivil()),
                String.valueOf(item.getDataNascimento()),
                String.valueOf(item.getCep()),
                String.valueOf(item.getLogradouro()),
                String.valueOf(item.getNumero()),
                String.valueOf(item.getComplemento()),
                String.valueOf(item.getBairro()),
                String.valueOf(item.getCidade()),
                String.valueOf(item.getEstado()),
                String.valueOf(item.getPais())
            });
        }
    }
    
    private Cliente listarCliente(String cpf) {
        ClienteDao dao = new ClienteDao();
        ArrayList<Cliente> clienteList = null;
        
        DefaultTableModel model = (DefaultTableModel)this.tblCliente.getModel();
        model.setRowCount(0);
        
        clienteList = dao.listar("", cpf);
        if (clienteList.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Cliente não encontrado");
            return null;
        }
        
        Cliente item = clienteList.getFirst();
        return item;
    }
    
    private void acharItemCombo(JComboBox combo, DefaultTableModel tabela, int linha, int coluna) {
        for (int i = 0; i < combo.getItemCount(); i++) {
            combo.setSelectedIndex(i);
            
            if(combo.getSelectedItem().toString().equals(tabela.getValueAt(linha, coluna).toString())) {
                combo.setSelectedIndex(i);
                break;
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaGerencial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaGerencial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaGerencial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaGerencial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaGerencial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PainelConsultaClientes;
    private javax.swing.JPanel PainelConsultaProdutos;
    private javax.swing.JPanel PainelDigitarClientes;
    private javax.swing.JPanel PainelDigitarProdutos;
    private javax.swing.JPanel PainelFooter;
    private javax.swing.JPanel PainelHeader;
    private javax.swing.JPanel PainelLateralCliente;
    private javax.swing.JPanel PainelLateralProdutos;
    private javax.swing.JPanel PainelLateralRelatorios;
    private javax.swing.JPanel PainelLateralVendas;
    private javax.swing.JTabbedPane TabbedPaneClientes;
    private javax.swing.JTabbedPane TabbedPanePrincipal;
    private javax.swing.JTabbedPane TabbedPaneProdutos;
    private javax.swing.JTabbedPane TabbedPaneVendas;
    private javax.swing.JButton btnAlterarCliente;
    private javax.swing.JButton btnAlterarProduto;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCancelarProduto;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnConsultarAnalitico;
    private javax.swing.JButton btnConsultarCliente;
    private javax.swing.JButton btnConsultarProduto;
    private javax.swing.JButton btnExcluirCliente;
    private javax.swing.JButton btnExcluirProduto;
    private javax.swing.JButton btnIncluirCliente;
    private javax.swing.JButton btnIncluirProduto;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnOkProduto;
    private javax.swing.JToggleButton btnSair;
    private javax.swing.JButton btnVendaAlterar;
    private javax.swing.JButton btnVendaCancelar;
    private javax.swing.JButton btnVendaConsultar;
    private javax.swing.JButton btnVendaExcluir;
    private javax.swing.JButton btnVendaIncluir;
    private javax.swing.JButton btnVendaItemAdicionar;
    private javax.swing.JButton btnVendaItemAlterar;
    private javax.swing.JButton btnVendaItemExcluir;
    private javax.swing.JButton btnVendaOK;
    private javax.swing.ButtonGroup buttonGroupSexo;
    private javax.swing.JComboBox<String> cboCor;
    private javax.swing.JComboBox<String> cboEstado;
    private javax.swing.JComboBox<String> cboEstadoCivil;
    private javax.swing.JComboBox<String> cboPais;
    private javax.swing.JFormattedTextField fTxtCepDigitar;
    private javax.swing.JFormattedTextField fTxtCpfConsultar;
    private javax.swing.JFormattedTextField fTxtCpfDigitar;
    private javax.swing.JFormattedTextField fTxtNumeroDigitar;
    private javax.swing.JFormattedTextField fTxtTelefone;
    private javax.swing.JFormattedTextField fTxtVendaCpf;
    private javax.swing.JLabel imgLogo;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JLabel lblAcaoDigitarCliente;
    private javax.swing.JLabel lblAcaoDigitarProduto;
    private javax.swing.JLabel lblBairro;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCPFCliente;
    private javax.swing.JLabel lblCategoriaPD;
    private javax.swing.JLabel lblCep;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblClientes;
    private javax.swing.JLabel lblComplemento;
    private javax.swing.JLabel lblCorPD;
    private javax.swing.JLabel lblDataNasc;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblEstadoCiv;
    private javax.swing.JLabel lblEstoquePD;
    private javax.swing.JLabel lblFabricantePD;
    private javax.swing.JLabel lblFooter;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblIDPRODUTO;
    private javax.swing.JLabel lblLogradouro;
    private javax.swing.JLabel lblModeloPD;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNomeCliente;
    private javax.swing.JLabel lblNomePD;
    private javax.swing.JLabel lblNomeProduto;
    private javax.swing.JLabel lblNumeroDigitar;
    private javax.swing.JLabel lblPais;
    private javax.swing.JLabel lblPrecoPD;
    private javax.swing.JLabel lblProdutos;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblStatusCliente;
    private javax.swing.JLabel lblStatusProduto;
    private javax.swing.JLabel lblTel;
    private javax.swing.JRadioButton rbtnFemininoCliente;
    private javax.swing.JRadioButton rbtnMasculinoCliente;
    private javax.swing.JTable tblAnalitico;
    private javax.swing.JTable tblCliente;
    private javax.swing.JTable tblItensVenda;
    private javax.swing.JTable tblProduto;
    private javax.swing.JTable tblSintetico;
    private javax.swing.JTable tblVenda;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtCategoriaProdutoDigitar;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JTextField txtDataAte;
    private com.toedter.calendar.JDateChooser txtDataNascimento;
    private com.toedter.calendar.JDateChooser txtDataVenda;
    private javax.swing.JTextField txtDataVendas;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEstoqueProduto;
    private javax.swing.JTextField txtFabricanteProduto;
    private javax.swing.JTextField txtIDProduto;
    private javax.swing.JTextField txtLogradouro;
    private javax.swing.JTextField txtModeloProdutoDigitar;
    private javax.swing.JTextField txtNomeClienteConsultar;
    private javax.swing.JTextField txtNomeClienteDigitar;
    private javax.swing.JTextField txtNomeProdutoConsultar;
    private javax.swing.JTextField txtNomeProdutoDigitar;
    private javax.swing.JFormattedTextField txtPrecoProduto;
    private javax.swing.JTextField txtRegistros;
    private javax.swing.JTextField txtRegistrosAnalitico;
    private javax.swing.JTextField txtValorAnalitico;
    private javax.swing.JTextField txtValorTotal;
    private javax.swing.JTextField txtVendaClienteNome;
    private javax.swing.JTextField txtVendaID;
    private javax.swing.JTextField txtVendaIDProduto;
    private javax.swing.JTextField txtVendaNomeProduto;
    private javax.swing.JTextField txtVendaPrecoProduto;
    private javax.swing.JTextField txtVendaQtdEstoque;
    private javax.swing.JTextField txtVendaQtdPedido;
    private javax.swing.JTextField txtVendaValorTotal;
    // End of variables declaration//GEN-END:variables
}
